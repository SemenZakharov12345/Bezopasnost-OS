#!/bin/bash

# Функция для вывода пользователей и домашних директорий
print_users() {
  cut -d: -f1,6 /etc/passwd | sort | tr ':' '\t'
}

# Функция для вывода запущенных процессов
print_processes() {
  ps -e --sort=pid
}

# Функция для вывода справки
print_help() {
  echo "Usage: $0 [OPTIONS]"
  echo "Options:"
  echo "  -u, --users          Display list of users and their home directories"
  echo "  -p, --processes      Display list of running processes sorted by PID"
  echo "  -h, --help           Display this help message"
  echo "  -l PATH, --log PATH  Redirect output to the specified file"
  echo "  -e PATH, --errors PATH  Redirect error output to the specified file"
}

# Переменные для хранения путей логов и ошибок
logfile=""
errorfile=""

# Обработка аргументов командной строки
while [[ "$#" -gt 0 ]]; do
  case $1 in
    -u|--users) action="users"; shift ;;
    -p|--processes) action="processes"; shift ;;
    -h|--help) action="help"; shift ;;
    -l|--log) logfile="$2"; shift 2 ;;
    -e|--errors) errorfile="$2"; shift 2 ;;
    *) echo "Unknown option: $1" >&2; print_help; exit 1 ;;
  esac
done

# Перенаправление вывода и ошибок
if [[ -n "$logfile" ]]; then
  if [[ -w "$logfile" || ! -e "$logfile" && -w "$(dirname "$logfile")" ]]; then
    exec >"$logfile"
  else
    echo "Error: Cannot write to log file $logfile" >&2
    exit 1
  fi
fi

if [[ -n "$errorfile" ]]; then
  if [[ -w "$errorfile" || ! -e "$errorfile" && -w "$(dirname "$errorfile")" ]]; then
    exec 2>"$errorfile"
  else
    echo "Error: Cannot write to error file $errorfile" >&2
    exit 1
  fi
fi

# Выполнение действия на основе аргументов
case $action in
  users) print_users ;;
  processes) print_processes ;;
  help) print_help ;;
  *) echo "No valid action specified" >&2; print_help; exit 1 ;;
esac
